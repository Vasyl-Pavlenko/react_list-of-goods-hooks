{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setReversed","handleSortType","type","goods","visibleGoods","sort","good1","good2","LENGTH","length","localeCompare","reverse","getReorderedGoods","visibleResetButton","className","classNames","ALPHABET","onClick","r","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAAiB,SAACC,GAAD,OAAoB,WACzCJ,EAAYI,KAYRC,EAxCD,SACLA,EADK,GAGJ,IADCN,EACF,EADEA,SAAUE,EACZ,EADYA,WAENK,EAAY,YAAOD,GAYzB,OAVIN,IAAaL,EAASI,MACxBQ,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAIV,IAAaL,EAASgB,OACjBF,EAAMG,OAASF,EAAME,OAGvBH,EAAMI,cAAcH,MAI3BR,EACKK,EAAaO,UAGfP,EAoBOQ,CACZnB,EACA,CAAEM,aAAYF,aAGVgB,EAAqBhB,IAAaL,EAASI,MAAQG,EAEzD,OACE,sBACEe,UAAU,oBADZ,UAME,sBAAKA,UAAU,UAAf,UACE,wBACEZ,KAAK,SACLY,UAAWC,IACT,iBACA,CAAE,WAAYlB,IAAaL,EAASwB,WAEtCC,QAAShB,EAAeT,EAASwB,UANnC,iCAWA,wBACEd,KAAK,SACLY,UAAWC,IACT,oBACA,CAAE,WAAYlB,IAAaL,EAASgB,SAEtCS,QAAShB,EAAeT,EAASgB,QANnC,4BAWA,wBACEN,KAAK,SACLY,UAAWC,IACT,oBACA,CAAE,YAAahB,IAEjBkB,QApDQ,WACdjB,GAAY,SAAAkB,GAAC,OAAKA,MA6Cd,qBAWCL,GACC,wBACEX,KAAK,SACLY,UAAU,6BAIVG,QA5DmB,WAC3BnB,EAAYN,EAASI,MACrBI,GAAY,IAoDN,sBAaJ,6BACE,6BACGG,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cCpInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e624486b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((good1, good2) => {\n      if (sortType === SortType.LENGTH) {\n        return good1.length - good2.length;\n      }\n\n      return good1.localeCompare(good2);\n    });\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReversed] = useState(false);\n\n  const handleSortType = (type: SortType) => () => {\n    setSortType(type);\n  };\n\n  const reverse = () => {\n    setReversed(r => !r);\n  };\n\n  const handleResetToDefault = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  const goods = getReorderedGoods(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n\n  const visibleResetButton = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div\n      className=\"\n        section\n        content\n      \"\n    >\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={handleSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={handleSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {visibleResetButton && (\n          <button\n            type=\"button\"\n            className=\"button\n              is-danger\n              is-light\n            \"\n            onClick={handleResetToDefault}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}